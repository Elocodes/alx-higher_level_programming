"""Tests the matrix division function"""

importing function
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

checking if matrix is empty
>>> matrix_divided([], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

checking if divisor is None
>>> matrix_divided([[1, 2,], [2, 2]], None)
Traceback (most recent call last):
...
TypeError: div must be a number

checking if only a list is passed
>>> matrix_divided([1, 2], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

checking if only one item in matix is list
>>> matrix_divided([[1, 2], 1, 1], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

checking if matrix contains string
>>> matrix_divided([[1, 3, "2"], [1, 1, 1]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

checking if matrix columns are equal
>>> matrix_divided([[1, 2], [1, 2, 3]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

checking if div is a string
>>> matrix_divided([[1, 2], [1, 2]], "2")
Traceback (most recent call last):
...
TypeError: div must be a number

checking if div is zero
>>> matrix_divided([[1, 2], [1, 2]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

checking default
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
